{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Habit","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","incOne","bind","assertThisInitialized","clickHandler","Date","getTime","habit","undefined","journal","dateString","goal","activity","timestamp","push","modifiyHabit","e","rect","currentTarget","getBoundingClientRect","clientX","left","right","changeMode","habitId","id","mode","progressBarWidth","Math","min","ceil","length","progressBarStyle","width","toString","react_default","a","createElement","className","onClick","name","role","style","React","Component","HabitConfig","_this2","state","nameValid","goalValid","saveHabit","clickSave","clickUndo","clickDelete","setState","document","getElementById","value","Number","isInteger","todayJournal","window","confirm","deleteHabit","pop","nameClass","goalClass","Fragment","htmlFor","placeholder","type","map","idx","key","toLocaleString","HabitCreate","_this3","replace","c","r","random","uuidv4","createHabit","AppConfig","_this4","clearDatabase","database","clear","clearHabit","NavBar","clickLeft","gotoToday","clickRight","visibility","hideRight","App","_this5","habits","date","dateToDateString","getFullYear","padStart","getMonth","getDate","newHabit","put","delete","add","openDB","upgrade","db","oldVersion","newVersion","transaction","console","log","createObjectStore","keyPath","count","initData","tx","store","objectStore","Promise","all","item","done","forEach","h","getAll","mainContent","navBar","_this6","habitDisplay","elem","App_Habit","dateChangeNaveBar","App_NavBar","newDate","setDate","returnNvaBar","index_esm","icon","Gear","size","Plus","App_HabitConfig","App_HabitCreate","App_AppConfig","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6425ef1.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from \"react\";\nimport 'bootstrap';\nimport { openDB, deleteDB, wrap, unwrap } from 'idb';\nimport Octicon, { Gear, Plus } from '@githubprimer/octicons-react'\n\nclass Habit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.incOne = this.incOne.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  timestamp() {\n    return (new Date()).getTime() / 1000;\n  }\n\n  async incOne() {\n    let habit = this.props.habit;\n    let todayJournal = habit.journal[this.props.dateString];\n    if (todayJournal === undefined) {\n      habit.journal[this.props.dateString] = {\n        goal: this.props.habit.goal,\n        activity: [this.timestamp()]\n      }\n    } else {\n      habit.journal[this.props.dateString].activity.push(this.timestamp())\n    }\n    await this.props.modifiyHabit(habit);\n  }\n\n  clickHandler(e) {\n    let rect = e.currentTarget.getBoundingClientRect();\n    if (e.clientX < (rect.left + rect.right) / 2) {\n      this.props.changeMode({ habitId: this.props.habit.id, mode: \"config\" })\n    } else {\n      this.incOne()\n    }\n  }\n\n  activity() {\n    let journal = this.props.habit.journal[this.props.dateString];\n    if (journal === undefined) {\n      return [];\n    } else {\n      return journal.activity;\n    }\n  }\n\n  goal() {\n    let journal = this.props.habit.journal[this.props.dateString];\n    if (journal === undefined) {\n      return this.props.habit.goal;\n    } else {\n      return journal.goal;\n    }\n  }\n\n  render() {\n    let progressBarWidth = Math.min(100, Math.ceil((this.activity().length / this.goal()) * 100));\n    let progressBarStyle = { \"width\": progressBarWidth.toString() + \"%\" }\n    let habitDisplay = (<div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"card mb-2\" onClick={this.clickHandler}>\n          <div className=\"card-body\">\n            <h5 className=\"mb-0\">{this.props.habit.name}</h5>\n            <div className=\"progress\">\n              <div className={progressBarWidth === 100 ? \"progress-bar bg-success\" : \"progress-bar\"} role=\"progressbar\" style={progressBarStyle}>\n                {this.activity().length.toString() + \"/\" + this.goal().toString()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>);\n    return habitDisplay;\n  }\n}\n\nclass HabitConfig extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameValid: true,\n      goalValid: true\n    }\n    this.saveHabit = this.saveHabit.bind(this);\n    this.clickSave = this.clickSave.bind(this);\n    this.clickUndo = this.clickUndo.bind(this);\n    this.clickDelete = this.clickDelete.bind(this);\n  }\n\n  async saveHabit() {\n    this.setState({\n      nameValid: true,\n      goalValid: true\n    });\n    let name = document.getElementById(\"habit-name\").value || this.props.habit.name;\n    if (name.length === 0 || typeof name !== \"string\") {\n      this.setState({ nameValid: false })\n      return;\n    }\n    let goal = Number(document.getElementById(\"habit-goal\").value) || this.props.habit.goal;\n    if (!Number.isInteger(goal) || goal <= 0) {\n      this.setState({ goalValid: false })\n      return;\n    }\n    let habit = this.props.habit;\n    let todayJournal = habit.journal[this.props.dateString];\n    habit.name = name;\n    habit.goal = goal;\n    if (todayJournal !== undefined) {\n      todayJournal.goal = goal;\n    }\n    await this.props.modifiyHabit(habit)\n    this.props.changeMode({ mode: \"normal\" })\n  }\n\n  async clickSave() {\n    await this.saveHabit();\n\n  }\n  async clickDelete() {\n    let habitId = this.props.habit.id;\n    let confirmDelete = window.confirm(\"Confirm Delete habit -\" + this.props.habit.name + \"- ?\");\n    if (confirmDelete) {\n      await this.props.deleteHabit(habitId);\n    }\n\n  }\n  async clickUndo() {\n    let habit = this.props.habit;\n    let dateString = this.props.dateString;\n    if (habit.journal[dateString] === undefined || habit.journal[dateString].activity.length === 0) {\n      return;\n    } else {\n      habit.journal[dateString].activity.pop();\n      await this.props.modifiyHabit(habit);\n    }\n  }\n\n  render() {\n    let activity = this.props.habit.journal[this.props.dateString];\n    if (activity === undefined) {\n      activity = []\n    } else {\n      activity = activity.activity;\n    }\n    let nameClass = \"form-control\" + (this.state.nameValid ? \"\" : \" is-invalid\");\n    let goalClass = \"form-control\" + (this.state.goalValid ? \"\" : \" is-invalid\");\n    return (<React.Fragment>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <label htmlFor=\"habit-name\" className=\"mb-0\">Name</label>\n          <input id=\"habit-name\" className={nameClass} placeholder={this.props.habit.name} />\n          {!this.state.nameValid && (<div className=\"invalid-feedback\">\n            Please provide a name.\n          </div>)}\n          <label htmlFor=\"habit-goal\" className=\"mb-0\">Goal</label>\n          <input id=\"habit-goal\" className={goalClass} min=\"0\" type=\"number\" placeholder={this.props.habit.goal} />\n          {!this.state.goalValid && (<div className=\"invalid-feedback\">\n            Please provide a valid goal (positive integer).\n          </div>)}\n          <div className=\"d-flex flex-row-reverse mt-2\">\n            <button className=\"btn btn-primary\" onClick={this.clickSave}>Save</button>\n            <button className=\"btn btn-danger mr-2\" onClick={this.clickDelete}>Delete Habit</button>\n          </div>\n        </div>\n      </div>\n      {activity.length > 0 &&\n        (<React.Fragment><div className=\"row mt-2\">\n          <div className=\"col-12\">\n            <ul className=\"list-group\">\n              {activity.map((a, idx) => {\n                return <li className=\"list-group-item\" key={idx}>{(new Date(a * 1000)).toLocaleString()}</li>\n              })}\n            </ul>\n          </div>\n        </div>\n          <div className=\"row mt-2\">\n            <div className=\"col-12\">\n              <div className=\"d-flex flex-row-reverse\">\n                <button className=\"btn btn-primary\" onClick={this.clickUndo}>Undo Last Activity</button>\n              </div>\n            </div>\n          </div></React.Fragment>)}\n    </React.Fragment>)\n  }\n}\n\nclass HabitCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameValid: true,\n      goalValid: true\n    }\n    this.clickSave = this.clickSave.bind(this);\n  }\n\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n  async clickSave() {\n    this.setState({\n      nameValid: true,\n      goalValid: true\n    });\n    let name = document.getElementById(\"habit-name\").value\n    if (name.length === 0 || typeof name !== \"string\") {\n      this.setState({ nameValid: false })\n      return;\n    }\n    let goal = Number(document.getElementById(\"habit-goal\").value)\n    if (!Number.isInteger(goal) || goal <= 0) {\n      this.setState({ goalValid: false })\n      return;\n    }\n    let habit = { \"goal\": goal, journal: {}, \"name\": name, id: this.uuidv4() }\n    await this.props.createHabit(habit);\n    this.props.changeMode({ mode: \"normal\" })\n  }\n\n  render() {\n    let nameClass = \"form-control\" + (this.state.nameValid ? \"\" : \" is-invalid\");\n    let goalClass = \"form-control\" + (this.state.goalValid ? \"\" : \" is-invalid\");\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-12\">\n          <label htmlFor=\"habit-name\" className=\"mb-0\">Name</label>\n          <input id=\"habit-name\" className={nameClass} placeholder=\"habit name\" />\n          {!this.state.nameValid && (<div className=\"invalid-feedback\">\n            Please provide a name.\n          </div>)}\n          <label htmlFor=\"habit-goal\" className=\"mb-0\">Goal</label>\n          <input id=\"habit-goal\" className={goalClass} min=\"0\" type=\"number\" placeholder=\"daily goal\" />\n          {!this.state.goalValid && (<div className=\"invalid-feedback\">\n            Please provide a valid goal (positive integer).\n          </div>)}\n          <div className=\"d-flex flex-row-reverse\">\n            <button className=\"btn btn-primary mt-2\" onClick={this.clickSave}>Save</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AppConfig extends Component {\n  constructor(props) {\n    super(props);\n    this.clearDatabase = this.clearDatabase.bind(this);\n  }\n\n  async clearDatabase() {\n    let confirmDelete = window.confirm(\"Confirm delete the database content?\");\n    if (confirmDelete) {\n      await this.props.database.clear(\"habits\");\n      this.props.clearHabit()\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"btn btn-outline-danger btn-lg btn-block\" onClick={this.clearDatabase}>Clear Database</div>\n        </div>\n      </div>\n    )\n\n  }\n}\n\nclass NavBar extends React.Component {\n  render() {\n    return (\n      <div className=\"navbar navbar-light bg-light mb-2\">\n        <div className=\"container d-flex justify-content-between\">\n          <a className=\"btn btn-outline-link btn-sm\"\n            onClick={this.props.clickLeft}>&lt;</a>\n          <a className=\"navbar-brand\" onClick={this.props.gotoToday}>{this.props.dateString}</a>\n          <a className=\"btn btn-outline-link btn-sm\"\n            onClick={this.props.clickRight}\n            style={{ visibility: this.props.hideRight ? 'hidden' : 'visible' }}>&gt;</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { habits: {}, date: new Date(), mode: { mode: \"normal\" } };\n    this.dateString = this.dateString.bind(this);\n    this.dateToDateString = this.dateToDateString.bind(this);\n    this.modifiyHabit = this.modifiyHabit.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.createHabit = this.createHabit.bind(this);\n    this.deleteHabit = this.deleteHabit.bind(this);\n  }\n\n  dateToDateString(date) {\n    let year = date.getFullYear().toString().padStart(4, \"0\");\n    let month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    let day = date.getDate().toString().padStart(2, \"0\");\n    return year + \"-\" + month + \"-\" + day;\n  }\n\n  dateString() {\n    return this.dateToDateString(this.state.date)\n  }\n\n  changeMode(mode) {\n    this.setState({ mode })\n  }\n\n  async modifiyHabit(newHabit) {\n    await this.database.put(\"habits\", newHabit);\n    let habits = this.state.habits;\n    habits[newHabit.id] = newHabit\n    this.setState({ habits })\n  }\n\n  async deleteHabit(habitId) {\n    await this.database.delete(\"habits\", habitId);\n    let habits = this.state.habits;\n    delete habits[habitId];\n    this.setState({ habits, mode: { mode: \"normal\" } })\n  }\n\n  async createHabit(habit) {\n    await this.database.add(\"habits\", habit);\n    let habits = this.state.habits;\n    habits[habit.id] = habit\n    this.setState({ habits })\n  }\n\n  async componentDidMount() {\n    let database = await openDB('habitTracker', 1, {\n      upgrade(db, oldVersion, newVersion, transaction) {\n        console.log(\"create database\")\n        db.createObjectStore('habits', { \"keyPath\": \"id\" });\n      }\n    });\n    this.database = database;\n    let habitCount = await database.count(\"habits\");\n    if (habitCount === 0) {\n      let initData = []\n      let tx = this.database.transaction('habits', 'readwrite');\n      let store = tx.objectStore('habits');\n      await Promise.all(initData.map(function (item) {\n        return store.add(item);\n      }));\n      await tx.done\n      let habits = {}\n      initData.forEach(h => habits[h.id] = h)\n      this.setState({ habits });\n    } else {\n      let initData = await this.database.getAll(\"habits\");\n      let habits = {}\n      initData.forEach(h => habits[h.id] = h)\n      this.setState({ habits });\n    }\n  }\n\n  render() {\n    let habitDisplay = []\n    for (let h in this.state.habits) {\n      let elem = <Habit\n        habit={this.state.habits[h]}\n        dateString={this.dateString()} key={h}\n        modifiyHabit={this.modifiyHabit}\n        changeMode={this.changeMode}></Habit>\n      habitDisplay.push(elem)\n    }\n    let mainContent;\n    let navBar;\n    let dateChangeNaveBar = (\n      <NavBar\n        clickLeft={() => {\n          let newDate = this.state.date;\n          newDate.setDate(this.state.date.getDate() - 1);\n          this.setState({ date: newDate });\n        }}\n        clickRight={() => {\n          let newDate = this.state.date;\n          newDate.setDate(this.state.date.getDate() + 1);\n          this.setState({ date: newDate });\n        }}\n        hideRight={false}\n        dateString={this.dateString()}\n        gotoToday={() => this.setState({ date: new Date() })}>\n      </NavBar >);\n    let returnNvaBar = (\n      <NavBar\n        clickLeft={() => this.changeMode({ mode: \"normal\" })}\n        clickRight={() => { }}\n        hideRight={true}\n        dateString={this.dateString()}\n        gotoToday={() => this.setState({ date: new Date() })}></NavBar>)\n    if (this.state.mode.mode === \"normal\") {\n      mainContent = (<React.Fragment>\n        {habitDisplay}\n        <div className=\"row\">\n          <div className=\"col-6 pr-1\">\n            <div className=\"btn btn-outline-primary btn-lg btn-block\"\n              onClick={() => this.changeMode({ mode: \"appConfig\" })}>\n              <Octicon icon={Gear} size='medium'></Octicon>\n            </div>\n          </div>\n          <div className=\"col-6 pl-1\">\n            <div className=\"btn btn-outline-primary btn-lg btn-block\"\n              onClick={() => this.changeMode({ mode: \"create\" })}>\n              <Octicon icon={Plus} size='medium'></Octicon>\n            </div>\n          </div>\n        </div></React.Fragment>);\n      navBar = dateChangeNaveBar;\n    } else if (this.state.mode.mode === \"config\") {\n      mainContent = (<HabitConfig habit={this.state.habits[this.state.mode.habitId]}\n        dateString={this.dateString()}\n        modifiyHabit={this.modifiyHabit}\n        changeMode={this.changeMode}\n        deleteHabit={this.deleteHabit}></HabitConfig>);\n      navBar = returnNvaBar;\n    } else if (this.state.mode.mode === \"create\") {\n      mainContent = (<HabitCreate changeMode={this.changeMode} createHabit={this.createHabit} ></HabitCreate>)\n      navBar = returnNvaBar;\n    } else if (this.state.mode.mode === \"appConfig\") {\n      mainContent = (<AppConfig\n        clearHabit={() => { this.setState({ mode: { mode: \"normal\" }, habits: {} }) }}\n        database={this.database}></AppConfig>)\n      navBar = returnNvaBar;\n    }\n    return (<div className=\"container\">{navBar}{mainContent}</div>)\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}