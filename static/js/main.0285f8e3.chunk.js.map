{"version":3,"sources":["habit-card.js","habit-detail.js","habit-create.js","app-config.js","App.js","serviceWorker.js","index.js"],"names":["Habit","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","incOne","bind","assertThisInitialized","clickHandler","Date","getTime","habit","undefined","journal","dateString","goal","activity","timestamp","push","modifiyHabit","e","rect","currentTarget","getBoundingClientRect","clientX","left","right","changeMode","habitId","id","mode","progressBarWidth","Math","min","ceil","length","progressBarStyle","width","toString","react_default","a","createElement","className","onClick","name","role","style","React","Component","HabitDetail","state","nameValid","goalValid","saveHabit","clickSave","clickUndo","clickDelete","setState","document","getElementById","value","Number","isInteger","todayJournal","window","confirm","deleteHabit","pop","nameClass","goalClass","Fragment","htmlFor","placeholder","type","map","idx","key","toLocaleString","HabitCreate","replace","c","r","random","uuidv4","createHabit","AppConfig","clearDatabase","database","clear","clearHabit","exportHabits","habits","JSON","stringify","download","href","encodeURIComponent","NavBar","clickLeft","gotoToday","clickRight","visibility","hideRight","App","date","dateToDateString","getFullYear","padStart","getMonth","getDate","newHabit","put","delete","add","openDB","upgrade","db","oldVersion","newVersion","transaction","console","log","createObjectStore","keyPath","count","initData","tx","store","objectStore","Promise","all","item","done","forEach","h","getAll","mainContent","navBar","_this2","habitDisplay","elem","habit_card","dateChangeNaveBar","App_NavBar","newDate","setDate","returnNvaBar","index_esm","icon","Gear","size","Plus","habit_detail","habit_create","app_config","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0285f8e3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\nclass Habit extends React.Component {\n    constructor(props) {\n      super(props);\n      this.incOne = this.incOne.bind(this);\n      this.clickHandler = this.clickHandler.bind(this);\n    }\n  \n    timestamp() {\n      return (new Date()).getTime() / 1000;\n    }\n  \n    async incOne() {\n      let habit = this.props.habit;\n      let todayJournal = habit.journal[this.props.dateString];\n      if (todayJournal === undefined) {\n        habit.journal[this.props.dateString] = {\n          goal: this.props.habit.goal,\n          activity: [this.timestamp()]\n        }\n      } else {\n        habit.journal[this.props.dateString].activity.push(this.timestamp())\n      }\n      await this.props.modifiyHabit(habit);\n    }\n  \n    clickHandler(e) {\n      let rect = e.currentTarget.getBoundingClientRect();\n      if (e.clientX < (rect.left + rect.right) / 2) {\n        this.props.changeMode({ habitId: this.props.habit.id, mode: \"config\" })\n      } else {\n        this.incOne()\n      }\n    }\n  \n    activity() {\n      let journal = this.props.habit.journal[this.props.dateString];\n      if (journal === undefined) {\n        return [];\n      } else {\n        return journal.activity;\n      }\n    }\n  \n    goal() {\n      let journal = this.props.habit.journal[this.props.dateString];\n      if (journal === undefined) {\n        return this.props.habit.goal;\n      } else {\n        return journal.goal;\n      }\n    }\n  \n    render() {\n      let progressBarWidth = Math.min(100, Math.ceil((this.activity().length / this.goal()) * 100));\n      let progressBarStyle = { \"width\": progressBarWidth.toString() + \"%\" }\n      let habitDisplay = (<div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card mb-2\" onClick={this.clickHandler}>\n            <div className=\"card-body\">\n              <h5 className=\"mb-0\">{this.props.habit.name}</h5>\n              <div className=\"progress\">\n                <div className={progressBarWidth === 100 ? \"progress-bar bg-success\" : \"progress-bar\"} role=\"progressbar\" style={progressBarStyle}>\n                  {this.activity().length.toString() + \"/\" + this.goal().toString()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>);\n      return habitDisplay;\n    }\n  }\n  export default Habit;","import React, { Component } from \"react\";\n\nclass HabitDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameValid: true,\n      goalValid: true\n    }\n    this.saveHabit = this.saveHabit.bind(this);\n    this.clickSave = this.clickSave.bind(this);\n    this.clickUndo = this.clickUndo.bind(this);\n    this.clickDelete = this.clickDelete.bind(this);\n  }\n\n  async saveHabit() {\n    this.setState({\n      nameValid: true,\n      goalValid: true\n    });\n    let name = document.getElementById(\"habit-name\").value || this.props.habit.name;\n    if (name.length === 0 || typeof name !== \"string\") {\n      this.setState({ nameValid: false })\n      return;\n    }\n    let goal = Number(document.getElementById(\"habit-goal\").value) || this.props.habit.goal;\n    if (!Number.isInteger(goal) || goal <= 0) {\n      this.setState({ goalValid: false })\n      return;\n    }\n    let habit = this.props.habit;\n    let todayJournal = habit.journal[this.props.dateString];\n    habit.name = name;\n    habit.goal = goal;\n    if (todayJournal !== undefined) {\n      todayJournal.goal = goal;\n    }\n    await this.props.modifiyHabit(habit)\n    this.props.changeMode({ mode: \"normal\" })\n  }\n\n  async clickSave() {\n    await this.saveHabit();\n\n  }\n  async clickDelete() {\n    let habitId = this.props.habit.id;\n    let confirmDelete = window.confirm(\"Confirm Delete habit -\" + this.props.habit.name + \"- ?\");\n    if (confirmDelete) {\n      await this.props.deleteHabit(habitId);\n    }\n\n  }\n  async clickUndo() {\n    let habit = this.props.habit;\n    let dateString = this.props.dateString;\n    if (habit.journal[dateString] === undefined || habit.journal[dateString].activity.length === 0) {\n      return;\n    } else {\n      habit.journal[dateString].activity.pop();\n      await this.props.modifiyHabit(habit);\n    }\n  }\n\n  render() {\n    let activity = this.props.habit.journal[this.props.dateString];\n    if (activity === undefined) {\n      activity = []\n    } else {\n      activity = activity.activity;\n    }\n    let nameClass = \"form-control\" + (this.state.nameValid ? \"\" : \" is-invalid\");\n    let goalClass = \"form-control\" + (this.state.goalValid ? \"\" : \" is-invalid\");\n    return (<React.Fragment>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <label htmlFor=\"habit-name\" className=\"mb-0\">Name</label>\n          <input id=\"habit-name\" className={nameClass} placeholder={this.props.habit.name} />\n          {!this.state.nameValid && (<div className=\"invalid-feedback\">\n            Please provide a name.\n          </div>)}\n          <label htmlFor=\"habit-goal\" className=\"mb-0\">Goal</label>\n          <input id=\"habit-goal\" className={goalClass} min=\"0\" type=\"number\" placeholder={this.props.habit.goal} />\n          {!this.state.goalValid && (<div className=\"invalid-feedback\">\n            Please provide a valid goal (positive integer).\n          </div>)}\n          <div className=\"d-flex flex-row-reverse mt-2\">\n            <button className=\"btn btn-primary\" onClick={this.clickSave}>Save</button>\n            <button className=\"btn btn-danger mr-2\" onClick={this.clickDelete}>Delete Habit</button>\n          </div>\n        </div>\n      </div>\n      {activity.length > 0 &&\n        (<React.Fragment><div className=\"row mt-2\">\n          <div className=\"col-12\">\n            <ul className=\"list-group\">\n              {activity.map((a, idx) => {\n                return <li className=\"list-group-item\" key={idx}>{(new Date(a * 1000)).toLocaleString()}</li>\n              })}\n            </ul>\n          </div>\n        </div>\n          <div className=\"row mt-2\">\n            <div className=\"col-12\">\n              <div className=\"d-flex flex-row-reverse\">\n                <button className=\"btn btn-primary\" onClick={this.clickUndo}>Undo Last Activity</button>\n              </div>\n            </div>\n          </div></React.Fragment>)}\n    </React.Fragment>)\n  }\n}\n\nexport default HabitDetail;","import React, { Component } from \"react\";\n\nclass HabitCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameValid: true,\n      goalValid: true\n    }\n    this.clickSave = this.clickSave.bind(this);\n  }\n\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n  async clickSave() {\n    this.setState({\n      nameValid: true,\n      goalValid: true\n    });\n    let name = document.getElementById(\"habit-name\").value\n    if (name.length === 0 || typeof name !== \"string\") {\n      this.setState({ nameValid: false })\n      return;\n    }\n    let goal = Number(document.getElementById(\"habit-goal\").value)\n    if (!Number.isInteger(goal) || goal <= 0) {\n      this.setState({ goalValid: false })\n      return;\n    }\n    let habit = { \"goal\": goal, journal: {}, \"name\": name, id: this.uuidv4() }\n    await this.props.createHabit(habit);\n    this.props.changeMode({ mode: \"normal\" })\n  }\n\n  render() {\n    let nameClass = \"form-control\" + (this.state.nameValid ? \"\" : \" is-invalid\");\n    let goalClass = \"form-control\" + (this.state.goalValid ? \"\" : \" is-invalid\");\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-12\">\n          <label htmlFor=\"habit-name\" className=\"mb-0\">Name</label>\n          <input id=\"habit-name\" className={nameClass} placeholder=\"habit name\" />\n          {!this.state.nameValid && (<div className=\"invalid-feedback\">\n            Please provide a name.\n          </div>)}\n          <label htmlFor=\"habit-goal\" className=\"mb-0\">Goal</label>\n          <input id=\"habit-goal\" className={goalClass} min=\"0\" type=\"number\" placeholder=\"daily goal\" />\n          {!this.state.goalValid && (<div className=\"invalid-feedback\">\n            Please provide a valid goal (positive integer).\n          </div>)}\n          <div className=\"d-flex flex-row-reverse\">\n            <button className=\"btn btn-primary mt-2\" onClick={this.clickSave}>Save</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default HabitCreate;","import React, { Component } from \"react\";\n\nclass AppConfig extends Component {\n    constructor(props) {\n        super(props);\n        this.clearDatabase = this.clearDatabase.bind(this);\n    }\n\n    async clearDatabase() {\n        let confirmDelete = window.confirm(\"Confirm delete the database content?\");\n        if (confirmDelete) {\n            await this.props.database.clear(\"habits\");\n            this.props.clearHabit()\n        }\n    }\n\n    render() {\n        let exportHabits = []\n        for (let habitId in this.props.habits) {\n            exportHabits.push(this.props.habits[habitId])\n        }\n        exportHabits = JSON.stringify(exportHabits, null, 2);\n        return (\n            <React.Fragment>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"btn btn-outline-danger btn-lg btn-block\" onClick={this.clearDatabase}>Clear Database</div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <a className=\"btn btn-outline-primary btn-lg btn-block mt-2\" download=\"habit.json\" href={'data:text/plain;charset=utf-8,' + encodeURIComponent(exportHabits)}>Export to Json</a>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n\n    }\n}\nexport default AppConfig;  ","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from \"react\";\nimport 'bootstrap';\nimport { openDB } from 'idb';\nimport Octicon, { Gear, Plus } from '@githubprimer/octicons-react'\nimport Habit from \"./habit-card\"\nimport HabitDetail from \"./habit-detail\"\nimport HabitCreate from \"./habit-create\"\nimport AppConfig from \"./app-config\"\n\nclass NavBar extends React.Component {\n  render() {\n    return (\n      <div className=\"navbar navbar-light bg-light mb-2\">\n        <div className=\"container d-flex justify-content-between\">\n          <a className=\"btn btn-outline-link btn-sm\"\n            onClick={this.props.clickLeft}>&lt;</a>\n          <a className=\"navbar-brand\" onClick={this.props.gotoToday}>{this.props.dateString}</a>\n          <a className=\"btn btn-outline-link btn-sm\"\n            onClick={this.props.clickRight}\n            style={{ visibility: this.props.hideRight ? 'hidden' : 'visible' }}>&gt;</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { habits: {}, date: new Date(), mode: { mode: \"normal\" } };\n    this.dateString = this.dateString.bind(this);\n    this.dateToDateString = this.dateToDateString.bind(this);\n    this.modifiyHabit = this.modifiyHabit.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.createHabit = this.createHabit.bind(this);\n    this.deleteHabit = this.deleteHabit.bind(this);\n  }\n\n  dateToDateString(date) {\n    let year = date.getFullYear().toString().padStart(4, \"0\");\n    let month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    let day = date.getDate().toString().padStart(2, \"0\");\n    return year + \"-\" + month + \"-\" + day;\n  }\n\n  dateString() {\n    return this.dateToDateString(this.state.date)\n  }\n\n  changeMode(mode) {\n    this.setState({ mode })\n  }\n\n  async modifiyHabit(newHabit) {\n    await this.database.put(\"habits\", newHabit);\n    let habits = this.state.habits;\n    habits[newHabit.id] = newHabit\n    this.setState({ habits })\n  }\n\n  async deleteHabit(habitId) {\n    await this.database.delete(\"habits\", habitId);\n    let habits = this.state.habits;\n    delete habits[habitId];\n    this.setState({ habits, mode: { mode: \"normal\" } })\n  }\n\n  async createHabit(habit) {\n    await this.database.add(\"habits\", habit);\n    let habits = this.state.habits;\n    habits[habit.id] = habit\n    this.setState({ habits })\n  }\n\n  async componentDidMount() {\n    let database = await openDB('habitTracker', 1, {\n      upgrade(db, oldVersion, newVersion, transaction) {\n        console.log(\"create database\")\n        db.createObjectStore('habits', { \"keyPath\": \"id\" });\n      }\n    });\n    this.database = database;\n    let habitCount = await database.count(\"habits\");\n    if (habitCount === 0) {\n      let initData = []\n      let tx = this.database.transaction('habits', 'readwrite');\n      let store = tx.objectStore('habits');\n      await Promise.all(initData.map(function (item) {\n        return store.add(item);\n      }));\n      await tx.done\n      let habits = {}\n      initData.forEach(h => habits[h.id] = h)\n      this.setState({ habits });\n    } else {\n      let initData = await this.database.getAll(\"habits\");\n      let habits = {}\n      initData.forEach(h => habits[h.id] = h)\n      this.setState({ habits });\n    }\n  }\n\n  render() {\n    let habitDisplay = []\n    for (let h in this.state.habits) {\n      let elem = <Habit\n        habit={this.state.habits[h]}\n        dateString={this.dateString()} key={h}\n        modifiyHabit={this.modifiyHabit}\n        changeMode={this.changeMode}></Habit>\n      habitDisplay.push(elem)\n    }\n    let mainContent;\n    let navBar;\n    let dateChangeNaveBar = (\n      <NavBar\n        clickLeft={() => {\n          let newDate = this.state.date;\n          newDate.setDate(this.state.date.getDate() - 1);\n          this.setState({ date: newDate });\n        }}\n        clickRight={() => {\n          let newDate = this.state.date;\n          newDate.setDate(this.state.date.getDate() + 1);\n          this.setState({ date: newDate });\n        }}\n        hideRight={false}\n        dateString={this.dateString()}\n        gotoToday={() => this.setState({ date: new Date() })}>\n      </NavBar >);\n    let returnNvaBar = (\n      <NavBar\n        clickLeft={() => this.changeMode({ mode: \"normal\" })}\n        clickRight={() => { }}\n        hideRight={true}\n        dateString={this.dateString()}\n        gotoToday={() => this.setState({ date: new Date() })}></NavBar>)\n    if (this.state.mode.mode === \"normal\") {\n      mainContent = (<React.Fragment>\n        {habitDisplay}\n        <div className=\"row\">\n          <div className=\"col-6 pr-1\">\n            <div className=\"btn btn-outline-primary btn-lg btn-block\"\n              onClick={() => this.changeMode({ mode: \"appConfig\" })}>\n              <Octicon icon={Gear} size='medium'></Octicon>\n            </div>\n          </div>\n          <div className=\"col-6 pl-1\">\n            <div className=\"btn btn-outline-primary btn-lg btn-block\"\n              onClick={() => this.changeMode({ mode: \"create\" })}>\n              <Octicon icon={Plus} size='medium'></Octicon>\n            </div>\n          </div>\n        </div></React.Fragment>);\n      navBar = dateChangeNaveBar;\n    } else if (this.state.mode.mode === \"config\") {\n      mainContent = (<HabitDetail habit={this.state.habits[this.state.mode.habitId]}\n        dateString={this.dateString()}\n        modifiyHabit={this.modifiyHabit}\n        changeMode={this.changeMode}\n        deleteHabit={this.deleteHabit}></HabitDetail>);\n      navBar = returnNvaBar;\n    } else if (this.state.mode.mode === \"create\") {\n      mainContent = (<HabitCreate changeMode={this.changeMode} createHabit={this.createHabit} ></HabitCreate>)\n      navBar = returnNvaBar;\n    } else if (this.state.mode.mode === \"appConfig\") {\n      mainContent = (<AppConfig\n        clearHabit={() => { this.setState({ mode: { mode: \"normal\" }, habits: {} }) }}\n        database={this.database}\n        habits={this.state.habits}></AppConfig>)\n      navBar = returnNvaBar;\n    }\n    return (<div className=\"container\">{navBar}{mainContent}</div>)\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}